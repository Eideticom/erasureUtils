#! /bin/bash

#Copyright (c) 2015, Los Alamos National Security, LLC
#All rights reserved.
#
#Copyright 2015.  Los Alamos National Security, LLC. This software was produced
#under U.S. Government contract DE-AC52-06NA25396 for Los Alamos National
#Laboratory (LANL), which is operated by Los Alamos National Security, LLC for
#the U.S. Department of Energy. The U.S. Government has rights to use, reproduce,
#and distribute this software.  NEITHER THE GOVERNMENT NOR LOS ALAMOS NATIONAL
#SECURITY, LLC MAKES ANY WARRANTY, EXPRESS OR IMPLIED, OR ASSUMES ANY LIABILITY
#FOR THE USE OF THIS SOFTWARE.  If software is modified to produce derivative
#works, such modified software should be clearly marked, so as not to confuse it
#with the version available from LANL.
# 
#Additionally, redistribution and use in source and binary forms, with or without
#modification, are permitted provided that the following conditions are met:
#1. Redistributions of source code must retain the above copyright notice, this
#list of conditions and the following disclaimer.
#
#2. Redistributions in binary form must reproduce the above copyright notice,
#this list of conditions and the following disclaimer in the documentation
#and/or other materials provided with the distribution.
#3. Neither the name of Los Alamos National Security, LLC, Los Alamos National
#Laboratory, LANL, the U.S. Government, nor the names of its contributors may be
#used to endorse or promote products derived from this software without specific
#prior written permission.
#
#THIS SOFTWARE IS PROVIDED BY LOS ALAMOS NATIONAL SECURITY, LLC AND CONTRIBUTORS
#"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
#THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#ARE DISCLAIMED. IN NO EVENT SHALL LOS ALAMOS NATIONAL SECURITY, LLC OR
#CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
#OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
#STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
#OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#-----
#NOTE:
#-----
#Although these files reside in a seperate repository, they fall under the MarFS copyright and license.
#
#MarFS is released under the BSD license.
#
#MarFS was reviewed and released by LANL under Los Alamos Computer Code identifier:
#LA-CC-15-039.
#
#These erasure utilites make use of the Intel Intelligent Storage Acceleration Library (Intel ISA-L), which can be found at https://github.com/01org/isa-l and is under its own license.
#
#MarFS uses libaws4c for Amazon S3 object communication. The original version
#is at https://aws.amazon.com/code/Amazon-S3/2601 and under the LGPL license.
#LANL added functionality to the original work. The original work plus
#LANL contributions is found at https://github.com/jti-lanl/aws4c.
#
#GNU licenses can be found at http://www.gnu.org/licenses/.

ITER=10 # Number of iterations to perform

echo
echo "Test of generalized erasure code : ftone and netof"
echo
echo "Compiling..."
./makefne
echo "done"
echo "Generating input file 'testfile'..."
dd if=/dev/urandom of=testfile bs=10M count=20
echo "done"
echo

cnt=0
while [[ $cnt -lt $ITER ]]; do
   n=$RANDOM
   let "n %= 13"
   n=$(( n + 2 ))
   e=$RANDOM
   let "e %= 3"
   e=$(( e + 1 ))
   bsz=$RANDOM
   let "bsz %= 90"
   bsz=$(( bsz + 10 ))
   echo
   echo "FtoNE : Generating $n+$e striping with at block size of ""$bsz""K..."
   #sleep 1
   ./lanl_ftone testfile testout $n $bsz $e > /dev/null 2>&1
   echo "...done"
   #sleep 1
   echo
   ls testout*
   echo
   #sleep 1

   bsz=$RANDOM
   let "bsz %= 1024"
   offset=$RANDOM
   offset=$(( offset * bsz ))
   let "offset %= 20470"
   bsz=$RANDOM
   let "bsz %= 1024"
   len=$RANDOM
   len=$(( len * bsz ))
   bsz=$(( 20480 - offset ))
   let "len %= $bsz"

   bsz=$RANDOM
   let "bsz %= $e"
   bsz=$(( bsz + 1 ))
   npat=""
   maxpos=$(( n + e - bsz ))
   oldpos=0
   errcnt=0
   errpos=-1
   
   {

      while [[ $errcnt -lt $bsz ]]; do
         while [[ $errpos -lt $oldpos ]]; do
            errpos=$RANDOM
            let "errpos %= maxpos"
         done

         echo "Placing error at $errpos"

         while [[ $oldpos -lt $errpos ]]; do
            if [[ $npat == "" ]]; then
               npat="0"
            else
               npat="$npat"".0"
            fi
            oldpos=$(( oldpos + 1 ))
         done

         if [[ $npat == "" ]]; then
            npat="1"
         else
            npat="$npat"".1"
         fi
         echo "   Error placed"
         oldpos=$(( oldpos + 1 ))
         
         errcnt=$(( errcnt + 1 ))
         maxpos=$(( maxpos + 1 ))
      done

      maxpos=$(( maxpos ))

      while [[ $oldpos -lt $maxpos ]]; do
         if [[ $npat == "" ]]; then
            npat="0"
         else
            npat="$npat"".0"
         fi
         oldpos=$(( oldpos + 1 ))
      done


      oldpos=$(( n * 2 ))

      epat=${npat:$oldpos}
      oldpos=$(( e * 2 ))
      npat=${npat::-$oldpos}

      echo "Performing a read of $len from data/erasure files with offset = $offset with N error pattern $npat and E error pattern $epat..."
      ./lanl_netof testout $npat $epat $offset $len outfile > /dev/null 2>&1

      echo "...done"
      echo
   }


   #sleep 1
   
   echo "Generating a matching file usind dd..."
   #sleep 1
   dd if=testfile of=cmpout bs=1 count=$len skip=$offset
   echo "...done"
   echo
   echo "Performing comparison..."
   #sleep 1
   cmp cmpout outfile

   if [[ ! $? -eq 0 ]]; then
      echo -e "\033[0;31mFAIL\033[0m"
      echo "Terminating premeturely..."
      exit 1
   else
      echo -e "\033[0;32mPASS\033[0m"
   fi

   sleep 2
   
   echo "Cleaining up outputs..."
   rm testout.*
   rm outfile cmpout

   cnt=$(( cnt + 1 ))
done

#./lanl_ftone testfile testout 8 64 3
echo "done"
echo




echo "Cleaning up..."

rm testfile lanl_netof lanl_ftone lanl_rebuildne
